/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package othelloGame;

import Excepciones.CustomException;
import Fichas.Ficha;
import Fichas.FichaBlanca;
import Fichas.FichaNegra;
import Hilos.Cronometro;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class FrmOthello extends javax.swing.JFrame {

    private Juego juego;
    private Cronometro hiloCronometro; //Intancio la clase
    private BtnPersonalizado[][] MatrizDeBotones;

    /**
     * Creates new form FrmOthello
     */
    public FrmOthello() {
        initComponents();
        this.JPanelNombreJugadores.setBackground(new Color(0, 0, 0, 5));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JPanelNombreJugadores = new javax.swing.JPanel();
        TxtNombreJugador1 = new javax.swing.JTextField();
        TxtNombreJugador2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        gap1 = new javax.swing.JPanel();
        lblTurno = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LblTime = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCantFichasNegras = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCantFichasBlancas = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        btnReiniciar = new javax.swing.JButton();
        LblJugador1 = new javax.swing.JLabel();
        LblJugador2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Othello");
        setMinimumSize(new java.awt.Dimension(1280, 720));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 800));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 800));

        JPanelNombreJugadores.setBackground(new java.awt.Color(204, 204, 204));
        JPanelNombreJugadores.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JPanelNombreJugadores.setForeground(new java.awt.Color(255, 255, 255));

        TxtNombreJugador1.setText("JugadorFichaNegra");
        TxtNombreJugador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNombreJugador1ActionPerformed(evt);
            }
        });

        TxtNombreJugador2.setText("JugadorFichaBlanca");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setText("Jugador de Fichas Negras");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("Jugador de Fichas Blancas");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Ingrese el nombre de los Jugadores");

        javax.swing.GroupLayout JPanelNombreJugadoresLayout = new javax.swing.GroupLayout(JPanelNombreJugadores);
        JPanelNombreJugadores.setLayout(JPanelNombreJugadoresLayout);
        JPanelNombreJugadoresLayout.setHorizontalGroup(
            JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelNombreJugadoresLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanelNombreJugadoresLayout.createSequentialGroup()
                        .addGroup(JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtNombreJugador1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(TxtNombreJugador2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(JPanelNombreJugadoresLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel9)
                        .addGap(0, 96, Short.MAX_VALUE))))
        );
        JPanelNombreJugadoresLayout.setVerticalGroup(
            JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelNombreJugadoresLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TxtNombreJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPanelNombreJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtNombreJugador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(JPanelNombreJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(296, 296, 296))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(JPanelNombreJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gap1.setBackground(new java.awt.Color(134, 134, 134));
        gap1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblTurno.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        lblTurno.setForeground(new java.awt.Color(255, 255, 255));
        lblTurno.setText("----------------");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Jugador de Negras: ");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tiempo");

        LblTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        LblTime.setForeground(new java.awt.Color(255, 255, 255));
        LblTime.setText("0:0:0");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Turno del jugador");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Jugador de Blancas:");

        lblCantFichasNegras.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        lblCantFichasNegras.setForeground(new java.awt.Color(255, 255, 255));
        lblCantFichasNegras.setText("0");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cant. Fichas Negras");

        lblCantFichasBlancas.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        lblCantFichasBlancas.setForeground(new java.awt.Color(255, 255, 255));
        lblCantFichasBlancas.setText("0");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Cant. Fichas Blancas");

        btnIniciar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnIniciar.setText("Iniciar Juego");
        btnIniciar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnReiniciar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnReiniciar.setText("Reiniciar");
        btnReiniciar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnReiniciar.setEnabled(false);
        btnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarActionPerformed(evt);
            }
        });

        LblJugador1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        LblJugador1.setForeground(new java.awt.Color(255, 255, 255));
        LblJugador1.setText("----------------");
        LblJugador1.setToolTipText("");

        LblJugador2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        LblJugador2.setForeground(new java.awt.Color(255, 255, 255));
        LblJugador2.setText("----------------");

        javax.swing.GroupLayout gap1Layout = new javax.swing.GroupLayout(gap1);
        gap1.setLayout(gap1Layout);
        gap1Layout.setHorizontalGroup(
            gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gap1Layout.createSequentialGroup()
                .addGroup(gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gap1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(gap1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTurno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(gap1Layout.createSequentialGroup()
                                .addGroup(gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(LblJugador1)
                                    .addComponent(LblJugador2)
                                    .addComponent(jLabel2)
                                    .addGroup(gap1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(LblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(12, 12, 12))
            .addGroup(gap1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCantFichasNegras, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCantFichasBlancas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gap1Layout.setVerticalGroup(
            gap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gap1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblTime)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(LblJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LblJugador2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblCantFichasNegras, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCantFichasBlancas, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnIniciar)
                .addGap(18, 18, 18)
                .addComponent(btnReiniciar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gap1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gap1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed

        try {
            
            ComprobarCantCaracteres();
            this.LblJugador1.setText(this.TxtNombreJugador1.getText());
            this.LblJugador2.setText(this.TxtNombreJugador2.getText());

            btnIniciar.setEnabled(false);
            btnReiniciar.setEnabled(true);
            JPanelNombreJugadores.setVisible(false);
            this.jPanel1.remove(this.JPanelNombreJugadores);
            juego = new Juego();
            hiloCronometro = new Cronometro(LblTime); //creo el Cronometro
            MatrizDeBotones = new BtnPersonalizado[12][12];
            llenarMatrizConBotones();
            cargarMatrizBtnEnJPanel();
            juego.Movimientos(true, MatrizDeBotones);
            ActualizarEtiquetasFrm();
            hiloCronometro.start(); //Ejecuto el metodo run del Thread  

            
        } catch (CustomException ex) {
            
            System.out.println("a ocurrido un error en: " + ex.getMessage());
            JOptionPane.showMessageDialog(null, "a ocurrido un error en: " + ex.getMessage());
            
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    public void ComprobarCantCaracteres() throws CustomException {
        if (TxtNombreJugador1.getText().equals("") || TxtNombreJugador2.getText().equals("")) {
            throw new CustomException("El nombre del jugador1 y jugador2, no pueden estar vacios");
        }
        if (TxtNombreJugador1.getText().length() >= 20 || TxtNombreJugador2.getText().length() > 20) {
            throw new CustomException("El nombre de los jugadores no puede tener mas de 20 caracteres");
        }
        if (TxtNombreJugador1.getText().equals(TxtNombreJugador2.getText())) {
            throw new CustomException("El nombre del jugador1 y jugador2, no pueden ser iguales");
        }
    }

    private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarActionPerformed
        hiloCronometro.interrupt();
        juego = new Juego();
        hiloCronometro = new Cronometro(LblTime); //creo el Cronometro
        MatrizDeBotones = new BtnPersonalizado[12][12];

        //remover todo el contenido del jpanel y refrescar
        this.jPanel1.removeAll();
        this.jPanel1.repaint();
        //-----------------------------------
        btnIniciar.setEnabled(true);
        btnReiniciar.setEnabled(false);
        JPanelNombreJugadores.setVisible(true);
        this.jPanel1.add(this.JPanelNombreJugadores);

    }//GEN-LAST:event_btnReiniciarActionPerformed

    private void TxtNombreJugador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNombreJugador1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtNombreJugador1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmOthello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmOthello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmOthello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmOthello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmOthello().setVisible(true);
            }
        });
    }

    public void llenarMatrizConBotones() {
        for (int k = 0; k < 12; k++) {
            for (int l = 0; l < 12; l++) {
                MatrizDeBotones[k][l] = new BtnPersonalizado();
            }
        }
    }

    private void cargarMatrizBtnEnJPanel() {
        for (int f = 0; f < 12; f++) {
            for (int c = 0; c < 12; c++) {
                //obtenermos boton por boton
                BtnPersonalizado boton = MatrizDeBotones[f][c];
                //organizamos los botones con un grid que contiene(12 filas , 12 columnas)
                jPanel1.setLayout(new GridLayout(12, 12));
                jPanel1.add(boton);
                //sincronizamos para mostra las 4 fichas Iniciales
                sincronizarMatrices();

                boton.addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {

                        if (boton.isActivado() & juego.isActivado()) {
                            //quita los movimientos posibles del anterior jugador
                            juego.Movimientos(false, MatrizDeBotones);
                            //agrega la ficha en la matriz juego
                            AgregarFicha(boton);
                            //realiza cambios en fichas que se comieron
                            juego.CambiodeFichas(ObtenerFC(boton));
                            try {
                                //espera que termine el hilo que realiza cambios en fichas que se comieron
                                juego.getHiloCambiaFichas().join();
                            } catch (InterruptedException exc) {
                                System.out.println(exc);
                            }
                            //sincronizamos para mostra las fichas comidas
                            sincronizarMatrices();
                            boton.setActivado(false);
                            //cuenta las jugadas y cambia el turno
                            juego.cont();
                            //agrega los nuevos posibles movimientos al jugador actual
                            juego.Movimientos(true, MatrizDeBotones);
                            juego.ActualizarCantFichas();
                            ActualizarEtiquetasFrm();
                            soundClick();
                            //sino quedan movimientos finaliza el juego
                            quedanMovimientos();

                        }//cierre if
                    }
                });
            }//cierre for#2
        }//cierre for#1
    }

    public void sincronizarMatrices() {
        Ficha matriz[][];
        matriz = juego.getMatriz();

        for (int f = 0; f < 12; f++) {
            for (int c = 0; c < 12; c++) {
                if (matriz[f][c].getTipo() == 1) {

                    ImageIcon iconobtn = new ImageIcon("src/Imagenes/FichaNegra.png");
                    BtnPersonalizado btn = MatrizDeBotones[f][c];
                    btn.setIcon(iconobtn);
                    //setTimeout(() -> Animar(btn, iconobtn), 500);
                } else {

                    if (matriz[f][c].getTipo() == 2) {
                        ImageIcon iconobtn = new ImageIcon("src/Imagenes/FichaBlanca.png");
                        BtnPersonalizado btn = MatrizDeBotones[f][c];
                        btn.setIcon(iconobtn);
                        //setTimeout(() -> Animar(btn, iconobtn), 500);
                    }

                }

            }

        }

    }

    public void quedanMovimientos() {
        int btnHabilitados = 0;

        for (int A = 0; A < 12; A++) {
            for (int B = 0; B < 12; B++) {
                BtnPersonalizado btn = MatrizDeBotones[A][B];
                if (btn.isActivado()) {
                    btnHabilitados++;
                }
            }
        }

        if (btnHabilitados == 0) {
            juego.setActivado(false);
            hiloCronometro.interrupt(); //termina el hilo del tiempo
            if (juego.getCantFichasNegras() > juego.getCantFichasBlancas()) {
                JOptionPane.showMessageDialog(null, "Ha terminado el juego, ha ganado el jugador de las fichas Negras");
            } else {
                if (juego.getCantFichasNegras() < juego.getCantFichasBlancas()) {
                    JOptionPane.showMessageDialog(null, "Ha terminado el juego, ha ganado el jugador de las fichas Blancas");
                } else {
                    JOptionPane.showMessageDialog(null, "Ha terminado el juego, los 2 jugadores han empatado");
                }
            }
            hiloCronometro.interrupt();
        }
    }

    public void ActualizarEtiquetasFrm() {

        //lblTurno.setText(String.valueOf(juego.getTurno()));
        if (juego.getTurno() == 1) {
            lblTurno.setText(this.LblJugador1.getText());
        } else {
            lblTurno.setText(this.LblJugador2.getText());
        }
        this.lblCantFichasNegras.setText(String.valueOf(juego.getCantFichasNegras()));
        this.lblCantFichasBlancas.setText(String.valueOf(juego.getCantFichasBlancas()));
    }

    public int[] ObtenerFC(BtnPersonalizado btn) {
        int vect[] = new int[2];

        for (int i = 0; i < 12; i++) {
            for (int j = 0; j < 12; j++) {
                if (MatrizDeBotones[i][j].equals(btn)) {

                    vect[0] = i;
                    vect[1] = j;
                    return vect;
                }
            }
        }
        return null;
    }

    public void AgregarFicha(BtnPersonalizado boton) {
        //establece el tipo de la ficha segun el turno
        if (juego.getTurno() == 1) {
            int vect[] = ObtenerFC(boton);
            ImageIcon iconobtn = new ImageIcon("src/Imagenes/FichaNegra.png");
            setTimeout(() -> AnimarFichaAgregada(boton, iconobtn, 30), 100);
            setTimeout(() -> AnimarFichaAgregada(boton, iconobtn, 50), 250);
            juego.getMatriz()[vect[0]][vect[1]] = new FichaNegra();

        } else {
            int vect[] = ObtenerFC(boton);
            ImageIcon iconobtn = new ImageIcon("src/Imagenes/FichaBlanca.png");
            setTimeout(() -> AnimarFichaAgregada(boton, iconobtn, 30), 100);
            setTimeout(() -> AnimarFichaAgregada(boton, iconobtn, 50), 250);
            juego.getMatriz()[vect[0]][vect[1]] = new FichaBlanca();

        }

    }

    public void AnimarFichaAgregada(BtnPersonalizado boton, ImageIcon iconoImg, int escala) {

        if (juego.getTurno() == 1) {
            int vect[] = ObtenerFC(boton);
            ImageIcon icono = new ImageIcon(iconoImg.getImage().getScaledInstance(escala, escala, Image.SCALE_AREA_AVERAGING));
            BtnPersonalizado btn = MatrizDeBotones[vect[0]][vect[1]];
            btn.setIcon(icono);

        } else {
            int vect[] = ObtenerFC(boton);

            ImageIcon icono = new ImageIcon(iconoImg.getImage().getScaledInstance(escala, escala, Image.SCALE_AREA_AVERAGING));
            BtnPersonalizado btn = MatrizDeBotones[vect[0]][vect[1]];
            btn.setIcon(icono);

        }
    }

    public void setTimeout(Runnable runnable, int delay) {
        new Thread(() -> {
            try {
                Thread.sleep(delay);
                runnable.run();
            } catch (Exception e) {
                System.err.println(e);
            }
        }).start();
    }

    public void soundClick() {
        try {
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("src/sonido/btnclick1.wav").getAbsoluteFile());
            Clip clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
            System.out.println("Error al reproducir el sonido.");
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelNombreJugadores;
    private javax.swing.JLabel LblJugador1;
    private javax.swing.JLabel LblJugador2;
    private javax.swing.JLabel LblTime;
    private javax.swing.JTextField TxtNombreJugador1;
    private javax.swing.JTextField TxtNombreJugador2;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JPanel gap1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCantFichasBlancas;
    private javax.swing.JLabel lblCantFichasNegras;
    private javax.swing.JLabel lblTurno;
    // End of variables declaration//GEN-END:variables
}
